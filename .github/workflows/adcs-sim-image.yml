name: Publish ADCS Simulator Docker image on Release

on:
  workflow_dispatch:
    branches: [ main ]
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:


    
      - uses: actions/checkout@master




      - name: Get the tag version for building image
        id: get_version
        #run: echo ::set-env name=VERSION::$(git tag --sort=taggerdate -l [0-9]* | tail -n1)
        run: echo ::set-env name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
          
      - name: Get current date  for building image
        id: get_date
        run: echo "::set-output name=BUILD_TIME::$(date -u '+%Y-%m-%d_%H:%M:%S')"
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

      - name: Get commit hash  for building image
        id: get_commit
        run: echo "::set-output name=COMMIT::$(git rev-parse --short HEAD)"
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4

        with:
      # list of Docker images to use as base name for tags
          images: |
            djkormo/adcs-simulator
        # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        with:
          name: djkormo/adcs-simulator
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          buildargs: VERSION,COMMIT,BUILD_TIME,PROJECT
          tags: "latest,${{ env.VERSION }},${{ steps.meta.outputs.tags }}"
          dockerfile: Dockerfile

